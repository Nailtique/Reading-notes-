The article : 
understanding the problem domain is the hardest part of programming 

what is the hardest part in writing the code ?

This is a question with many answeres -- we can say debuggin as an example or at least for me 


for the author the hardest is learning the problem domain!

By creating a familiar problem domain, I found that both the tasks of me teaching a new technology and the viewer learning that technology were much easier, because it is very difficult to learn more than one thing at once.

WHY PROBLEM DOMAIN ARE HARD ?
As programmers, we also are often not given complete information about the problem domain, so we donâ€™t even have the information we need to understand it.
I was essentially given the entire problem domain in the form of a spec that was clear and unambiguous.  I was easily able to learn that problem domain and because of it, I was able to write the code very easily as well.



THe book  : JAVA SCRIPT -- pages 100 till 105 

What is an object :

Objects group together a set of variables and functions to create a model 
of a something you would recognize from the real world. In an object, 
variables and functions take on new names. 


Like variables and named functions, 
properties and methods have a 
name and a value. In an object, 
that name is called a key. 
An object cannot have two keys 
with the same name. This is 
because keys are used to access 
their corresponding values. 
The value of a property can be a 
string, number, Boolean, array, or 
even another object. The value of a 
method is always a function. 


Creating an object : 

we create an object through literal notation / it is the easuest and th emost popular way
the object is stored in a variable, it is between curly braces and would refer to an object 

PART TWO OF THE READING 

Document object model : DOM 

The DOM is neither part of HTML, nor part of JavaScript; it is a separate set of rules. 
It is implemented by all major browser makers, and covers two primary areas:


THE DOM TREE IS A 
MODEL OF A WEB PAGE 
As a browser loads a web page, it creates a model of that page. 
The model is called a DOM tree, and it is stored in the browsers' memory. 
It consists of four main types of nodes. 
BODY OF HTML PAGE 
<html> 
<body> 
<di v id="page"> 
<hl id="header">List</hl> 
<h2>Buy groceries</h2> 
<ul > 
<li id="one" class="hot"><em>fresh</em> figs</li> 
<li id="two" class="hot">pine nuts</l i> 
<l i id="three" class="hot">honey</l i > 
<l i id="four">balsamic vinegar</l i> 
</ ul > 
<script src="js/l i st.js "></scri pt> 
</ div> 
</ body> 
</ html > 
